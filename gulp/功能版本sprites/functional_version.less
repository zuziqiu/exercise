/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@close-name: 'close';
@close-x: 0px;
@close-y: 73px;
@close-offset-x: 0px;
@close-offset-y: -73px;
@close-width: 16px;
@close-height: 16px;
@close-total-width: 76px;
@close-total-height: 387px;
@close-image: 'functional_version.png';
@close: 0px 73px 0px -73px 16px 16px 76px 387px 'functional_version.png' 'close';
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-name: '{D9D3A56B-925A-431A-AF9A-1844E853355D}';
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-x: 0px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-y: 0px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-offset-x: 0px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-offset-y: 0px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-width: 15px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-height: 9px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-total-width: 76px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-total-height: 387px;
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-image: 'functional_version.png';
@-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d-: 0px 0px 0px 0px 15px 9px 76px 387px 'functional_version.png' '{D9D3A56B-925A-431A-AF9A-1844E853355D}';
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-name: '{EC3F3150-E21B-4689-A7B9-BA1DD2A3F718}';
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-x: 0px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-y: 17px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-offset-x: 0px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-offset-y: -17px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-width: 15px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-height: 10px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-total-width: 76px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-total-height: 387px;
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-image: 'functional_version.png';
@-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718-: 0px 17px 0px -17px 15px 10px 76px 387px 'functional_version.png' '{EC3F3150-E21B-4689-A7B9-BA1DD2A3F718}';
@-name: '专业版';
@-x: 0px;
@-y: 255px;
@-offset-x: 0px;
@-offset-y: -255px;
@-width: 76px;
@-height: 62px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 255px 0px -255px 76px 62px 76px 387px 'functional_version.png' '专业版';
@-name: '基础版';
@-x: 0px;
@-y: 325px;
@-offset-x: 0px;
@-offset-y: -325px;
@-width: 76px;
@-height: 62px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 325px 0px -325px 76px 62px 76px 387px 'functional_version.png' '基础版';
@-name: '微信支付';
@-x: 0px;
@-y: 97px;
@-offset-x: 0px;
@-offset-y: -97px;
@-width: 52px;
@-height: 44px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 97px 0px -97px 52px 44px 76px 387px 'functional_version.png' '微信支付';
@-name: '打勾';
@-x: 0px;
@-y: 53px;
@-offset-x: 0px;
@-offset-y: -53px;
@-width: 18px;
@-height: 12px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 53px 0px -53px 18px 12px 76px 387px 'functional_version.png' '打勾';
@-name: '支付宝';
@-x: 0px;
@-y: 149px;
@-offset-x: 0px;
@-offset-y: -149px;
@-width: 44px;
@-height: 44px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 149px 0px -149px 44px 44px 76px 387px 'functional_version.png' '支付宝';
@-name: '支付打勾';
@-x: 0px;
@-y: 35px;
@-offset-x: 0px;
@-offset-y: -35px;
@-width: 13px;
@-height: 10px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 35px 0px -35px 13px 10px 76px 387px 'functional_version.png' '支付打勾';
@-name: '订单页-专业版';
@-x: 0px;
@-y: 201px;
@-offset-x: 0px;
@-offset-y: -201px;
@-width: 60px;
@-height: 46px;
@-total-width: 76px;
@-total-height: 387px;
@-image: 'functional_version.png';
@-: 0px 201px 0px -201px 60px 46px 76px 387px 'functional_version.png' '订单页-专业版';
@spritesheet-width: 76px;
@spritesheet-height: 387px;
@spritesheet-image: 'functional_version.png';
@spritesheet-sprites: @close @-d9-d3-a56-b-925-a-431-a-a-f9-a-1844-e853355-d- @-e-c3-f3150-e21-b-4689-a7-b9-b-a1-d-d2-a3-f718- @- @- @- @- @- @- @-;
@spritesheet: 76px 387px 'functional_version.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
