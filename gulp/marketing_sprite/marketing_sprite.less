/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@center-class-name: 'center_class';
@center-class-x: 0px;
@center-class-y: 196px;
@center-class-offset-x: 0px;
@center-class-offset-y: -196px;
@center-class-width: 78px;
@center-class-height: 78px;
@center-class-total-width: 200px;
@center-class-total-height: 780px;
@center-class-image: 'marketing_sprite.png';
@center-class: 0px 196px 0px -196px 78px 78px 200px 780px 'marketing_sprite.png' 'center_class';
@center-lannual-name: 'center_lannual';
@center-lannual-x: 0px;
@center-lannual-y: 306px;
@center-lannual-offset-x: 0px;
@center-lannual-offset-y: -306px;
@center-lannual-width: 78px;
@center-lannual-height: 78px;
@center-lannual-total-width: 200px;
@center-lannual-total-height: 780px;
@center-lannual-image: 'marketing_sprite.png';
@center-lannual: 0px 306px 0px -306px 78px 78px 200px 780px 'marketing_sprite.png' 'center_lannual';
@center-preferential-name: 'center_preferential';
@center-preferential-x: 0px;
@center-preferential-y: 416px;
@center-preferential-offset-x: 0px;
@center-preferential-offset-y: -416px;
@center-preferential-width: 78px;
@center-preferential-height: 78px;
@center-preferential-total-width: 200px;
@center-preferential-total-height: 780px;
@center-preferential-image: 'marketing_sprite.png';
@center-preferential: 0px 416px 0px -416px 78px 78px 200px 780px 'marketing_sprite.png' 'center_preferential';
@center-privacy-name: 'center_privacy';
@center-privacy-x: 0px;
@center-privacy-y: 526px;
@center-privacy-offset-x: 0px;
@center-privacy-offset-y: -526px;
@center-privacy-width: 78px;
@center-privacy-height: 78px;
@center-privacy-total-width: 200px;
@center-privacy-total-height: 780px;
@center-privacy-image: 'marketing_sprite.png';
@center-privacy: 0px 526px 0px -526px 78px 78px 200px 780px 'marketing_sprite.png' 'center_privacy';
@default-without-data-name: 'default_without data';
@default-without-data-x: 0px;
@default-without-data-y: 636px;
@default-without-data-offset-x: 0px;
@default-without-data-offset-y: -636px;
@default-without-data-width: 200px;
@default-without-data-height: 144px;
@default-without-data-total-width: 200px;
@default-without-data-total-height: 780px;
@default-without-data-image: 'marketing_sprite.png';
@default-without-data: 0px 636px 0px -636px 200px 144px 200px 780px 'marketing_sprite.png' 'default_without data';
@sale-earnings-name: 'sale_earnings';
@sale-earnings-x: 0px;
@sale-earnings-y: 0px;
@sale-earnings-offset-x: 0px;
@sale-earnings-offset-y: 0px;
@sale-earnings-width: 66px;
@sale-earnings-height: 66px;
@sale-earnings-total-width: 200px;
@sale-earnings-total-height: 780px;
@sale-earnings-image: 'marketing_sprite.png';
@sale-earnings: 0px 0px 0px 0px 66px 66px 200px 780px 'marketing_sprite.png' 'sale_earnings';
@sale-total-name: 'sale_total';
@sale-total-x: 0px;
@sale-total-y: 98px;
@sale-total-offset-x: 0px;
@sale-total-offset-y: -98px;
@sale-total-width: 66px;
@sale-total-height: 66px;
@sale-total-total-width: 200px;
@sale-total-total-height: 780px;
@sale-total-image: 'marketing_sprite.png';
@sale-total: 0px 98px 0px -98px 66px 66px 200px 780px 'marketing_sprite.png' 'sale_total';
@spritesheet-width: 200px;
@spritesheet-height: 780px;
@spritesheet-image: 'marketing_sprite.png';
@spritesheet-sprites: @center-class @center-lannual @center-preferential @center-privacy @default-without-data @sale-earnings @sale-total;
@spritesheet: 200px 780px 'marketing_sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
